{"version":3,"sources":["components/NavBar.js","components/PanelLayout.js","components/XPanelFrame.js","components/XPanelLayout.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","p","Typography","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","tabStyle","minWidth","NavBar","classes","useState","setValue","tabs","label","icon","join","className","AppBar","position","color","Tabs","onChange","event","newValue","tab","console","log","window","CrComLib","publishEvent","indicatorColor","textColor","variant","centered","scrollButtons","map","n","Tab","style","key","PanelLayout","frameStyle","display","padding","panelStyle","panelContentStyle","height","minHeight","buttonStripStyle","flexFlow","justifyContent","alignItems","marginLeft","buttonStyle","largeIconStyle","transform","PanelFrame","XPanelLayout","XPanelFrame","darkTheme","createTheme","type","App","basename","process","ThemeProvider","CssBaseline","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c83943e0.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport LaptopIcon from '@material-ui/icons/Laptop';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport AppleIcon from '@material-ui/icons/Apple';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst tabStyle = {\r\n    width: 240,\r\n    minWidth: 240\r\n}\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const tabs = [\r\n    { label: 'Desktop Computer', icon: <DesktopWindowsIcon />, join: '31' },\r\n    { label: 'Laptop Computer', icon: <LaptopIcon />, join: '32' },\r\n    { label: 'Document Camera', icon: <DescriptionIcon />, join: null },\r\n    { label: 'Apple TV', icon: <AppleIcon />, join: null },\r\n    { label: 'Blu-ray Video', icon: <MovieIcon />, join: null }\r\n  ];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\r\n    let tab = tabs[newValue];\r\n\r\n    if(tab.join) {\r\n      console.log('Triggering digital join', tab.join);\r\n      window.CrComLib.publishEvent('b', tab.join,â€¯true);\r\n      window.CrComLib.publishEvent('b', tab.join, false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"centered\"\r\n          centered\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          { tabs.map((tab,n) => <Tab label={tab.label} icon={tab.icon} style={tabStyle} {...a11yProps(n)} key={n} />) }\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        Item One\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import NavBar from \"./NavBar\";\r\n\r\nconst PanelLayout = () => {\r\n    return(\r\n        <NavBar />\r\n    );\r\n};\r\n\r\nexport default PanelLayout;","import PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\r\n\r\nconst frameStyle = {\r\n    display: 'inline-block',\r\n    backgroundColor: 'black',\r\n    padding: 24\r\n};\r\n\r\nconst panelStyle = {\r\n    display: 'flex'\r\n}\r\n\r\nconst panelContentStyle = {\r\n    backgroundColor: 'white',\r\n    height: 800,\r\n    width: 1280,\r\n    minHeight: 800,\r\n    minWidth: 1280\r\n};\r\n\r\nconst buttonStripStyle = {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    marginLeft: 24\r\n};\r\n\r\nconst buttonStyle = {\r\n    color: 'white'\r\n};\r\n\r\nconst largeIconStyle = {\r\n    transform: 'scale(1.8)'\r\n};\r\n\r\nconst PanelFrame = ({children}) => {\r\n    return (\r\n        <div style={frameStyle}>\r\n            <div style={panelStyle}>\r\n                <div style={panelContentStyle}>\r\n                    {children}\r\n                </div>\r\n                <div style={buttonStripStyle}>\r\n                    <div style={buttonStyle}><PowerSettingsNewIcon /></div>\r\n                    <div style={buttonStyle}><HomeIcon /></div>\r\n                    <div style={buttonStyle}><EmojiObjectsIcon /></div>\r\n                    <div style={buttonStyle}><ArrowDropUp style={largeIconStyle} /></div>\r\n                    <div style={buttonStyle}><ArrowDropDownIcon style={largeIconStyle} /></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PanelFrame;","import XPanelFrame from \"./XPanelFrame\";\r\nimport PanelLayout from \"./PanelLayout\";\r\n\r\nconst XPanelLayout = () => {\r\n    return(\r\n        <XPanelFrame>\r\n            <PanelLayout />\r\n        </XPanelFrame>\r\n    );\r\n};\r\n\r\nexport default XPanelLayout;","import { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport PanelLayout from './components/PanelLayout';\nimport XPanelLayout from './components/XPanelLayout';\n\nconst darkTheme = createTheme({\n  palette: {\n    type: 'dark',\n  }\n});\n\nconst App = () =>\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      <Switch>\n        <Route path=\"/\" component={PanelLayout} exact />\n        <Route path=\"/xpanel\" component={XPanelLayout} />\n      </Switch>\n\n    </ThemeProvider>\n  </HashRouter>\n;\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}